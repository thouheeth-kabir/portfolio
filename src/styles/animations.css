/* Animation styles and keyframes */

/* Keyframe definitions */
@keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
  
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes slideLeft {
    from {
      opacity: 0;
      transform: translateX(20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes slideRight {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes scaleIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
  
  @keyframes scaleOut {
    from {
      opacity: 1;
      transform: scale(1);
    }
    to {
      opacity: 0;
      transform: scale(0.95);
    }
  }
  
  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.7;
      transform: scale(1.05);
    }
  }
  
  @keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
      animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      transform: translateY(0);
    }
    40%, 43% {
      animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
      transform: translateY(-30px) scaleY(1.1);
    }
    70% {
      animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
      transform: translateY(-15px) scaleY(1.05);
    }
    90% {
      transform: translateY(-4px) scaleY(1.02);
    }
  }
  
  @keyframes shake {
    0%, 100% {
      transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
      transform: translateX(-2px);
    }
    20%, 40%, 60%, 80% {
      transform: translateX(2px);
    }
  }
  
  @keyframes wobble {
    0% {
      transform: translateX(0%);
    }
    15% {
      transform: translateX(-25%) rotate(-5deg);
    }
    30% {
      transform: translateX(20%) rotate(3deg);
    }
    45% {
      transform: translateX(-15%) rotate(-3deg);
    }
    60% {
      transform: translateX(10%) rotate(2deg);
    }
    75% {
      transform: translateX(-5%) rotate(-1deg);
    }
    100% {
      transform: translateX(0%);
    }
  }
  
  @keyframes flip {
    0% {
      transform: perspective(400px) rotateY(0);
      animation-timing-function: ease-out;
    }
    40% {
      transform: perspective(400px) translateZ(150px) rotateY(170deg);
      animation-timing-function: ease-out;
    }
    50% {
      transform: perspective(400px) translateZ(150px) rotateY(190deg) scale(1);
      animation-timing-function: ease-in;
    }
    80% {
      transform: perspective(400px) rotateY(360deg) scale(0.95);
      animation-timing-function: ease-in;
    }
    100% {
      transform: perspective(400px) scale(1);
      animation-timing-function: ease-in;
    }
  }
  
  @keyframes flipX {
    from {
      transform: perspective(400px) rotateX(90deg);
      opacity: 0;
    }
    40% {
      transform: perspective(400px) rotateX(-20deg);
    }
    60% {
      transform: perspective(400px) rotateX(10deg);
      opacity: 1;
    }
    80% {
      transform: perspective(400px) rotateX(-5deg);
    }
    to {
      transform: perspective(400px) rotateX(0deg);
      opacity: 1;
    }
  }
  
  @keyframes flipY {
    from {
      transform: perspective(400px) rotateY(90deg);
      opacity: 0;
    }
    40% {
      transform: perspective(400px) rotateY(-20deg);
    }
    60% {
      transform: perspective(400px) rotateY(10deg);
      opacity: 1;
    }
    80% {
      transform: perspective(400px) rotateY(-5deg);
    }
    to {
      transform: perspective(400px) rotateY(0deg);
      opacity: 1;
    }
  }
  
  @keyframes zoomIn {
    from {
      opacity: 0;
      transform: scale(0.3);
    }
    50% {
      opacity: 1;
    }
  }
  
  @keyframes zoomOut {
    from {
      opacity: 1;
    }
    50% {
      opacity: 0;
      transform: scale(0.3);
    }
    to {
      opacity: 0;
    }
  }
  
  @keyframes glow {
    from {
      box-shadow: 0 0 5px rgb(var(--color-primary-500) / 0.5);
    }
    50% {
      box-shadow: 0 0 20px rgb(var(--color-primary-500) / 0.8), 0 0 30px rgb(var(--color-primary-500) / 0.6);
    }
    to {
      box-shadow: 0 0 5px rgb(var(--color-primary-500) / 0.5);
    }
  }
  
  @keyframes gradient {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }
  
  @keyframes progress-stripes {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: 40px 0;
    }
  }
  
  /* Animation utility classes */
  .animate-fade-in {
    animation: fadeIn 0.6s ease-out;
  }
  
  .animate-fade-out {
    animation: fadeOut 0.6s ease-out;
  }
  
  .animate-slide-up {
    animation: slideUp 0.6s ease-out;
  }
  
  .animate-slide-down {
    animation: slideDown 0.6s ease-out;
  }
  
  .animate-slide-left {
    animation: slideLeft 0.6s ease-out;
  }
  
  .animate-slide-right {
    animation: slideRight 0.6s ease-out;
  }
  
  .animate-scale-in {
    animation: scaleIn 0.4s ease-out;
  }
  
  .animate-scale-out {
    animation: scaleOut 0.4s ease-out;
  }
  
  .animate-spin {
    animation: spin 1s linear infinite;
  }
  
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  .animate-bounce {
    animation: bounce 1s infinite;
  }
  
  .animate-shake {
    animation: shake 0.5s ease-in-out;
  }
  
  .animate-wobble {
    animation: wobble 1s ease-in-out;
  }
  
  .animate-flip {
    animation: flip 1s ease-in-out;
  }
  
  .animate-flip-x {
    animation: flipX 1s ease-in-out;
  }
  
  .animate-flip-y {
    animation: flipY 1s ease-in-out;
  }
  
  .animate-zoom-in {
    animation: zoomIn 0.6s ease-out;
  }
  
  .animate-zoom-out {
    animation: zoomOut 0.6s ease-out;
  }
  
  .animate-glow {
    animation: glow 2s ease-in-out infinite alternate;
  }
  
  .animate-gradient {
    background: linear-gradient(-45deg, 
      rgb(var(--color-primary-500)), 
      rgb(var(--color-secondary-500)), 
      rgb(var(--color-accent-500)), 
      rgb(var(--color-primary-600)));
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
  }
  
  /* Hover animations */
  .hover-lift {
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
  }
  
  .hover-lift:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 25px rgb(0 0 0 / 0.15);
  }
  
  .hover-scale {
    transition: transform 0.2s ease-out;
  }
  
  .hover-scale:hover {
    transform: scale(1.05);
  }
  
  .hover-glow {
    transition: box-shadow 0.3s ease-out;
  }
  
  .hover-glow:hover {
    box-shadow: 0 0 20px rgb(var(--color-primary-500) / 0.4);
  }
  
  .hover-rotate {
    transition: transform 0.3s ease-out;
  }
  
  .hover-rotate:hover {
    transform: rotate(5deg);
  }
  
  /* Entrance animations with delays */
  .animate-delay-100 {
    animation-delay: 0.1s;
  }
  
  .animate-delay-200 {
    animation-delay: 0.2s;
  }
  
  .animate-delay-300 {
    animation-delay: 0.3s;
  }
  
  .animate-delay-500 {
    animation-delay: 0.5s;
  }
  
  .animate-delay-700 {
    animation-delay: 0.7s;
  }
  
  .animate-delay-1000 {
    animation-delay: 1s;
  }
  
  /* Loading states */
  .loading-dots::after {
    content: '';
    animation: loadingDots 1.5s infinite;
  }
  
  @keyframes loadingDots {
    0%, 20% {
      content: '';
    }
    40% {
      content: '.';
    }
    60% {
      content: '..';
    }
    80%, 100% {
      content: '...';
    }
  }
  
  /* Skeleton loading */
  .skeleton {
    background: linear-gradient(110deg, 
      rgb(var(--color-muted)) 8%, 
      rgb(var(--color-muted) / 0.5) 18%, 
      rgb(var(--color-muted)) 33%);
    background-size: 200% 100%;
    animation: skeletonLoading 1.5s ease-in-out infinite;
  }
  
  @keyframes skeletonLoading {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }
  
  /* Parallax scroll */
  .parallax {
    transform: translateZ(0);
    will-change: transform;
  }
  
  /* 3D transforms */
  .preserve-3d {
    transform-style: preserve-3d;
  }
  
  .backface-hidden {
    backface-visibility: hidden;
  }
  
  /* Smooth transitions */
  .transition-smooth {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .transition-bounce {
    transition: all 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
  
  /* Focus animations */
  .focus-ring {
    transition: box-shadow 0.15s ease-out;
  }
  
  .focus-ring:focus-visible {
    animation: focusPulse 0.6s ease-out;
  }
  
  @keyframes focusPulse {
    0% {
      box-shadow: 0 0 0 0 rgb(var(--color-primary-500) / 0.7);
    }
    70% {
      box-shadow: 0 0 0 10px rgb(var(--color-primary-500) / 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgb(var(--color-primary-500) / 0);
    }
  }
  
  /* Text animations */
  .typewriter {
    overflow: hidden;
    border-right: 0.15em solid rgb(var(--color-primary-500));
    white-space: nowrap;
    margin: 0 auto;
    letter-spacing: 0.15em;
    animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
  }
  
  @keyframes typing {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }
  
  @keyframes blink-caret {
    from, to {
      border-color: transparent;
    }
    50% {
      border-color: rgb(var(--color-primary-500));
    }
  }
  
  /* Performance optimizations */
  .will-change-transform {
    will-change: transform;
  }
  
  .will-change-auto {
    will-change: auto;
  }
  
  /* Reduced motion overrides */
  @media (prefers-reduced-motion: reduce) {
    .animate-fade-in,
    .animate-slide-up,
    .animate-scale-in,
    .hover-lift,
    .hover-scale {
      animation: none !important;
      transform: none !important;
      transition: none !important;
    }
    
    .parallax {
      transform: none !important;
    }
  }